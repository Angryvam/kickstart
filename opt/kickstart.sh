#!/bin/bash
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# DO NOT EDIT THIS FILE! CHANGES WILL BE OVERWRITTEN ON UPDATE
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Send feature requests for https://github.com/dermatthes/pipf-php
#
# PIPF Kickstarter
#
# Copy this file into your project folder
#
# See https://github.com/continue/kickstart for more information


## Set the correct revision






CONTAINER_NAME=${PWD##*/}

export COLOR_NC='\e[0m' # No Color
export COLOR_WHITE='\e[1;37m'
export COLOR_BLACK='\e[0;30m'
export COLOR_BLUE='\e[0;34m'
export COLOR_LIGHT_BLUE='\e[1;34m'
export COLOR_GREEN='\e[0;32m'
export COLOR_LIGHT_GREEN='\e[1;32m'
export COLOR_CYAN='\e[0;36m'
export COLOR_LIGHT_CYAN='\e[1;36m'
export COLOR_RED='\e[0;31m'
export COLOR_LIGHT_RED='\e[1;31m'
export COLOR_PURPLE='\e[0;35m'
export COLOR_LIGHT_PURPLE='\e[1;35m'
export COLOR_BROWN='\e[0;33m'
export COLOR_YELLOW='\e[1;33m'
export COLOR_GRAY='\e[0;30m'
export COLOR_LIGHT_GRAY='\e[0;37m'

command -v curl >/dev/null 2>&1 || { echo -e "$COLOR_LIGHT_RED I require curl but it's not installed (run: 'apt-get install curl').  Aborting.$COLOR_NC" >&2; exit 1; }
command -v docker >/dev/null 2>&1 || { echo -e "$COLOR_LIGHT_RED I require docker but it's not installed (see http://docker.io).  Aborting.$COLOR_NC" >&2; exit 1; }

KICKSTART_UPGRADE_URL="https://raw.githubusercontent.com/c7lab/kickstart/master/opt/kickstart.sh"
KICKSTART_RELEASE_NOTES_URL="https://raw.githubusercontent.com/c7lab/kickstart/master/opt/kickstart-release-notes.txt"
KICKSTART_VERSION_URL="https://raw.githubusercontent.com/c7lab/kickstart/master/opt/kickstart-release.txt"

KICKSTART_CURRENT_VERSION="1.0.6"


if [ ! -f ".kick.yml" ]
then
    echo -e $COLOR_RED "[ERR] Missing .kick.yml file." $COLOR_NC
    exit 2
fi



# Parse .kick.yml for line from: "docker/container:version"
USE_PIPF_VERSION=`cat .kick.yml | sed -n 's/from\: "\(.\+\)\"/\1/p'`

if [ "$USE_PIPF_VERSION" == "" ]
then
    echo -e $COLOR_RED "[ERR] .kick.yml file does not include 'from:' - directive." $COLOR_NC
    exit 2
fi;

_usage() {
    echo -e $COLOR_NC "Usage: $0 [<command>]

    COMMANDS:

        $0 upgrade          Search/Install newer version of kickstart

    "
    exit 1
}


_print_header() {
    echo -e $COLOR_WHITE '
   ____ ___ ____  _____   ____  _______     _______ _     ___  ____  _____ ____
  |  _ \_ _|  _ \|  ___| |  _ \| ____\ \   / / ____| |   / _ \|  _ \| ____|  _ \
  | |_) | || |_) | |_    | | | |  _|  \ \ / /|  _| | |  | | | | |_) |  _| | |_) |
  |  __/| ||  __/|  _|   | |_| | |___  \ V / | |___| |__| |_| |  __/| |___|  _ <
  |_|  |___|_|   |_|     |____/|_____|  \_/  |_____|_____\___/|_|   |_____|_| \_\
' "
+---------------------------------------------------------------------------------+
| PIPF Kickstart - DEVELOPER MODE                                                 |
| Version: $KICKSTART_CURRENT_VERSION
| Flavour: $USE_PIPF_VERSION (defined in 'from:'-section of .kick.yml)"



    KICKSTART_NEWEST_VERSION=`curl -s "$KICKSTART_VERSION_URL"`
    if [ "$KICKSTART_NEWEST_VERSION" != "$KICKSTART_CURRENT_VERSION" ]
    then
        echo "|                                                                                 |"
        echo "| UPDATE AVAILABLE: Head Version: $KICKSTART_NEWEST_VERSION"
        echo "| To Upgrade Version: Run ./kickstart.sh upgrade                                  |"
        echo "|                                                                                 |"
    fi;

    echo "| More information: https://github.com/continue/kickstart                         |"
    echo "| Or ./kickstart.sh help                                                          |"
    echo "+---------------------------------------------------------------------------------+"

}


run_shell() {
   echo -e $COLOR_CYAN;
   echo "[kickstart.sh] Container '$CONTAINER_NAME' already running"
   echo "===> [kickstart.sh] Opening new shell: "
   echo -e $COLOR_NC

   docker exec -it --user user -e "DEV_TTYID=[SUB]" $CONTAINER_NAME /bin/bash

   echo -e $COLOR_CYAN;
   echo "<=== [kickstart.sh] Leaving container."
   echo -e $COLOR_NC
   exit
}


ask_user() {
    echo "";
    read -r -p "$1 (y|N)" choice
    case "$choice" in
      n|N)
        echo "Abort!";
        ;;
      y|Y)
        return 0;
        ;;

      *)
        echo 'Response not valid';;
    esac
    exit 1;
}


run_container() {
    echo -e $COLOR_GREEN "Loading container '$USE_PIPF_VERSION'..."
    docker pull "$USE_PIPF_VERSION"

    docker rm $CONTAINER_NAME
    echo -e $COLOR_WHITE "==> [$0] STARTING CONTAINER (docker run): Running container in dev-mode..." $COLOR_NC
    docker run -it                                      \
        -v "$PWD/:/opt/"                                \
        -e "DEV_CONTAINER_NAME=$CONTAINER_NAME"         \
        -e "DEV_TTYID=[MAIN]"                           \
        -e "DEV_UID=$UID"                               \
        -p 80:4200                                      \
        --name $CONTAINER_NAME                          \
        "$USE_PIPF_VERSION" dev

    status=$?
    if [[ $status -ne 0 ]]
    then
        echo -e $COLOR_RED
        echo "[kickstart.sh][FAIL]: Container startup failed."
        echo "[kickstart.sh][FAIL]: Make sure you have Port 80 free and docker installed correctly."
        echo -e $COLOR_NC
        exit $status
    fi;
    echo -e $COLOR_WHITE "<== [kickstart.sh] CONTAINER SHUTDOWN"
    echo -e $COLOR_RED "    PIPF Exit - Goodbye" $COLOR_NC
    exit 0;
}

case  "$1" in
    "")
        _print_header
        if [ `docker ps | grep "$CONTAINER_NAME" | wc -l` -gt 0 ]
        then
            run_shell
        fi;
        run_container
        ;;

    "upgrade")
        echo "Checking for updates from $KICKSTART_UPGRADE_URL..."
        curl "$KICKSTART_RELEASE_NOTES_URL"

        ask_user "Do you want to upgrade?"

        echo "Writing to $0..."
        curl "$KICKSTART_UPGRADE_URL" -o "$0"
        echo "Done"
        echo "Calling on update trigger: $0 on-after-update"
        $0 on-after-upgrade
        echo -e "$COLOR_GREEN[kickstart.sh] Upgrade successful.$COLOR_NC"
        exit 0;;

    "on-after-upgrade")
        echo "Nothing to do."
        # This will be called after a upgrade
        exit 0;;

    "help")
        _usage
        ;;

    *)
        echo -e "$COLOR_RED""[kickstart.sh] Invalid parameter '$1'."
        _usage
        exit 3;;

esac;
